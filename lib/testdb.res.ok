--> db4.nArticles == 2
--> db4p = Patschkofel,Vuokatti,Copper Mountain, Colorado
--> db4a = Sauna im Stubai,Vuokatti
--> state tests
--> db4.states = Colorado
--> filter tests
--> cave size filter tests
--> cs len 1
--> cs min1 0 max1 5
--> cs len 1
--> cs min1 5 max1 100
--> cave size or filter tests
--> filter object = {"op":"or","conds":[{"op":"and","conds":[{"op":"minCaveSize","param1":0},{"op":"maxCaveSize","param1":5}]},{"op":"minCaveSize","param1":100}]}
--> filter condition list length = 2
--> filter string = ((cavesize>=0 and cavesize<=5) or cavesize>=100)
--> cs len 2
--> cs min1 0 max1 5
--> cs min2 100 max2 ud
--> generation 0 format test
-->   dbgen0.PsgeoDB
-->   dbgen0.itemgen0
-->   dbgen0.applyAll
--> generation 1 format test
--> generation 2 format test
--> source = hah
--> itemgen2 = {"n":"Kattilajärven iso lippaluola, Nuuksio, Espoo","m":"https://example.com/cavemap-kattilajarvi.pdf","l":9.3,"la":"exact","k":"Espoo","c":"Finland","o":"Europe","rl":[{"t":"Kattilajärvi roof caves","i":"https://example.com/a-picture.jpg","w":["Jari"],"y":2020,"m":5,"a":["Caving"],"sa":["Rock"],"u":"https://example.com/an-article.html"}],"lat":60.30145486,"lon":24.62792567,"s":"hah"}
--> test complete and successful
